
macro=;
lquote [ ;

log myscript.out;

watch=;

coll tbr ;

drift : fitd 2 rfitd 0.1 ;

var :
  i j
  plotapo bootit
  runquickie dobremer
  medium big verybig
;

set medium 200 ;
set big 500 ;
set verybig 1500 ;
set plotapo 1 ;
set runquickie 1 ;
set dobremer 1 ;
set bootit 1 ;


cls ;
resettime ;
tsave * tmp.tre

if ( ( ntax > 'medium' ) && 'runquickie' )
  set 0 ntax / 70 ;
  set 1 'i' / 2 ;
  if ( 'i' < 2 ) set i 2 ; end
  if ( 'j' < 3 ) set j 3 ; end
  if ( 'j' > 20 ) set j 20 ; end
  if ( 'i' > 30 ) set i 30 ; end
  sec: xss'/.0i'-'/.0j'+3-1 gocomb 60 fuse 4 drift 5 combstart 5 ;
  if ( ntax < 'big' )
       quote &10
        ------------------------------------------------------------
        Search routine used:
           a quick consensus estimation (Goloboff &38 Farris 2001),
           with 15 replications (each with default &34xmult&34  but
           with 3 starting points instead of the default 5, and using
           XSS --see Goloboff &38 Pol 2007).  The sectorial searches
           analyzing sectors of 60 or more taxa with a combined
           strategy (5 starting points, 5 cycles of tree-drifting for
           each, fusing the results in 4 cycles).  Sectors selections:
           XSS dividing tree in '/.0i' to '/.0j' parts, 3 times., CSS
           and RSS with defaults.  For more details of CSS, RSS,
           and tree-drifting, see Goloboff 1999., for details of
           XSS, see Goloboff &38 Pol 2007.  For details of &34xmult&34,
           see documentation of TNT.
           Note: for consensus calculation, trees TBR-collapsed.
        ------------------------------------------------------------ ;
        qnelsen [ xmu = rep 3 xss ; save ; ] ;

  else
   if ( ntax < 'verybig' )
       quote &10
        ------------------------------------------------------------
        Search routine used:
           a quick consensus estimation (Goloboff &38 Farris 2001),
           with 15 random addition sequences, plus TBR, and sectorial
           searches using CSS (defaults), RSS (defaults), and
           XSS (dividing tree in '/.0i' to '/.0j' parts, 3 times),
           analyzing sectors of 60 or more taxa with a combined
           strategy (5 starting points, 5 cycles of tree-drifting for
           each, fusing the results in 4 cycles).  For details of
           CSS, RSS, and tree-drifting, see Goloboff 1999., for details
           of XSS, see Goloboff &38  Pol 2007.   For details of &34xmult&34,
           see documentation of TNT.
           Note: for consensus calculation, trees TBR-collapsed.
        ------------------------------------------------------------ ;
          qnelsen [ mu1=ho1 ; sec=xss ; drift=iter5; save ; ] ;
   else
       quote &10
        ------------------------------------------------------------
        Search routine used:
           a quick consensus estimation (Goloboff &38 Farris 2001),
           with 15 random addition sequences plus TBR.
           Note: for consensus calculation, trees TBR-collapsed.
        ------------------------------------------------------------ ;
        qnelsen [ mu1=ho1 ; save ; ] ;

    end
  end
else
  report +/1 ;
       cls ;
       quote &10
        ------------------------------------------------------------
        Search routine used:
           finding optimal score 20 times independently, using defaults
           of &34xmult&34  plus 10 cycles of tree-drifting (Goloboff
           1999).
           Note: for consensus calculation, trees TBR-collapsed.
           ALSO NOTE: THIS IS AN OVERKILL FOR MOST DATA SETS!
        ------------------------------------------------------------ ;
  hold 1000 ;
  xmu = hit 20 drift 10 ;
  save ;
  nelsen * ;
   set i ntrees ;
   cls ;
   quote &10
    ------------------------------------------------------------
    Synapomorphies of 'i' trees plotted on the strict
    consensus.  Only unambiguous synapomorphies, occuring in
    every tree, are indicated. This makes results much more
    conservative!
    ------------------------------------------------------------ ;
   coll rule 3 ;
   set i -- ;
   apo [ 0.'i' ;
   coll tbr ;
  tchoose { strict } ;
end

tsave / ; end
quote &10
    ------------------------------------------------------------
    Group supports are calculated by TBR-swapping the trees
    found, keeping note of the number of steps needed to
    loose each group.  The labels on branches show absolute
    and relative bremer supports (Goloboff &38  Farris 2001).
    Groups indicated with a question mark (?) are those
    for which the absolute bremer supports appear to be
    10 or more...
    ------------------------------------------------------------ ;
sub 10 ;
ttag= ;
p tmp.tre ;
bsupp !!+0 1. ;
sub 10x0.90 ;
bsupp [!!+0 1.;
ttag;
sub 0 ;
keep 1 ;
ttag - ;


ttag = ;
cls ;
quote &10
      ------------------------------------------------------------
      Resampling is done with 100 replications of symmetric
      resampling (see Goloboff et al. 2003), analyzing each data
      set with a single random addition sequence plus TBR
      (collapsing the resulting tree with TBR, see Goloboff &38
      Farris, 2001).  The labels on branches show frequency and
      frequency differences (see Goloboff et al. 2003).
      ------------------------------------------------------------ ;
coll tbr ;
resample [ mu1=ho1; ] rep 100 freq gc from 0 ;
keep 1 ;
ttag ;


export - myscript.tre ;
quote Results saved (as text) to file myscript.out &10&10;

log / ;

set i time ;
quote
***************************************************
ANALYSIS COMPLETED (total time used: '/.0i' sec)
***************************************************

               Please note!!

    ...for each of the quantities calculated
    by this script, it is possible to use more
    exhaustive and accurate (but more time
    consuming) algorithms, or viceversa. The
    routines used by the script are only an
    approximation which provides a good tradeoff
    between accuracy and run-times for most data
    sets


;

proc/;